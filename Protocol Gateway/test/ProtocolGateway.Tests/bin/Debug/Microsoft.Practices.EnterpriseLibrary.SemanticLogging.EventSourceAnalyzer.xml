<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventSourceAnalyzer</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzer">
            <summary>
            Helper class to validate the correctness of <see cref="T:System.Diagnostics.Tracing.EventSource"/> instances. Useful in unit tests.
            </summary>
            <example>
              <code>EventSourceAnalyzer.InspectAll(MyEventSource.Instance);</code>
              <remarks>Where 'Instance' property returns a singleton instance of 'MyEventSource' class like:
                <code>public static MyEventSource Instance = new MyEventSource();</code>
              </remarks>
            </example>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzer.InspectAll(System.Diagnostics.Tracing.EventSource)">
            <summary>
            Inspects the specified <see cref="T:System.Diagnostics.Tracing.EventSource"/> for potential runtime errors.
            </summary>
            <param name="eventSource">The event source instance to inspect.</param>
            <example>
              <code>EventSourceAnalyzer.InspectAll(MyEventSource.Instance);</code>
              <remarks>Where 'Instance' property returns a singleton instance of 'MyEventSource' class like:
                <code>public static MyEventSource Instance = new MyEventSource();</code>
              </remarks>
            </example>
            <exception cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException">Exception thrown if a failure was found in the specified <see cref="T:System.Diagnostics.Tracing.EventSource"/>.</exception>
            <exception cref="T:System.ArgumentException">Exception thrown if a failure was found in the specified <see cref="T:System.Diagnostics.Tracing.EventSource"/>.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzer.Inspect(System.Diagnostics.Tracing.EventSource)">
            <summary>
            Inspects the specified <see cref="T:System.Diagnostics.Tracing.EventSource"/> for potential runtime errors 
            filtering out validations according to the specified instance properties.
            </summary>
            <param name="eventSource">The event source instance to inspect.</param>
            <example>
              <code>EventSourceAnalyzer.InspectAll(MyEventSource.Instance);</code>
              <remarks>Where 'Instance' property returns a singleton instance of 'MyEventSource' class like:
              <code>public static MyEventSource Instance = new MyEventSource();</code>
              </remarks>
            </example>
            <exception cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException">Exception thrown if a failure was found in the specified <see cref="T:System.Diagnostics.Tracing.EventSource"/>.</exception>
            <exception cref="T:System.ArgumentException">Exception thrown if a failure was found in the specified <see cref="T:System.Diagnostics.Tracing.EventSource"/>.</exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzer.ExcludeEventListenerEmulation">
            <summary>
            Gets or sets a value indicating whether to exclude the internal <see cref="T:System.Diagnostics.Tracing.EventListener"/> instance to emulate sending events.
            </summary>
            <remarks>
            The analyzer performs a 'probing' execution using an internal <see cref="T:System.Diagnostics.Tracing.EventListener"/> instance to emulate logging using the inspected <see cref="T:System.Diagnostics.Tracing.EventSource"/> instance.
            By excluding this analysis, no ETW events will be sent in case of executing the analysis from a running application where ETW events may be monitored.
            </remarks>
            <value>
            <c>true</c> for excluding this analysis, <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzer.ExcludeWriteEventTypeMapping">
            <summary>
            Gets or sets a value indicating whether to exclude an exact type mapping between the event arguments and 'EventSource.WriteEvent' argument.
            </summary>
            <value>
            <c>true</c> for excluding this analysis, <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzer.ExcludeWriteEventTypeOrder">
            <summary>
            Gets or sets a value indicating whether to exclude the type order analysis between the event arguments and the 'EventSource.WriteEvent' arguments order.
            This process is costly and may be excluded for large event sources with events with many arguments. 
            However it is recommended to leave this option off (default) to ensure that all 'EventSource.WriteEvent' arguments are correctly mapped to the event parameters.
            </summary>
            <value>
            <c>true</c> for excluding this analysis, <c>false</c> otherwise.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException">
            <summary>
            Represents errors that occur during <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzer"/> execution.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventSourceAnalyzerException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
    </members>
</doc>
